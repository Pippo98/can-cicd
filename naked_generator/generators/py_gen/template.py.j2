from enum import IntEnum, IntFlag
from struct import pack, unpack

# Bitsets

{% for bitset in bitsets -%}
class {{ bitset.name }}({{ "IntFlag" if len(bitset.superclass) == 0 }}):
    {%- if len(bitset.content) != 0 %}
        {%- for bits in bitset.content %}
    {{ bits.item }} = {{ 2**bits.index }}
        {%- endfor %}
    {%- elif len(bitset.superclass) != 0 %}
        {%- for field in bitset.superclass %}
    {{ field.lower() }} = {{ utils.to_camel_case('{}_{}'.format(filename, field),'_') }}(0)
        {%- endfor %}
    {%- else %}
    pass
    {%- endif %}

{% endfor -%}

# Enums

{% for enum in enums -%}
class {{ enum.name }}(IntEnum):
    {%- for values in enum.content %}
    {{ values.item }} = {{ values.index }}
    {%- endfor %}

{% endfor -%}

# Messages

{% for message in messages -%}
class {{ utils.to_camel_case(message.name,"_") }}Msg:
    def __init__({{ ", ".join(params(message.fields)) }}):
    {%- if len(message.fields) != 0 %}
        {%- for field in message.fields %}
        self.{{ field.name }} = {{ python_type_name(field) }}({{ field.name }}) if {{ field.name }} is not None else None
        {%- endfor %}
    {%- endif %}
    {%- if not already_timestamp(message.fields) %}
        self.timestamp=int()
    {%- endif %}
        self.size = {{ message.size }}
    {%- if message.frequency != -1 %}
        self.millis = {{ message.frequency }}
    {%- endif %}

    def serialize(self):
    {%- for field in fields_serialization(message, messages_size) %}
        {{ field }}
    {%- endfor %}

    def deserialize(self, data):
    {%- for field in fields_deserialization(message, messages_size) %}
        {{ field }}
    {%- endfor %}

    def __eq__(self, other):
        if not isinstance(other, {{ utils.to_camel_case(message.name,"_") }}Msg):
            return False
        {%- for field in message.fields %}
            {%- if isinstance(field.type, Number) and 'float' in field.type.name %}
        if abs(self.{{ field.name }}-other.{{ field.name }}) > 0.001:
            return False
            {%- else %}
        if self.{{ field.name }} != other.{{ field.name }}:
            {%- endif %}
            return False
        {%- endfor %}
        return True

{% endfor -%}